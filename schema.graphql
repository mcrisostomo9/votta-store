# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

interface PrismicDocument {
    "Marks the document as previewable using Prismic's preview system. Include this field if updates to the document should be previewable by content editors before publishing. **Note: the value of this field is not stable and should not be used directly**."
    _previewable: ID!
    "Alternate languages for the document."
    alternate_languages: [PrismicLinkType!]!
    "The document's data object without transformations exactly as it comes from the Prismic API."
    dataRaw: JSON!
    "The document's data object without transformations. The object is stringified via `JSON.stringify` to eliminate the need to declare subfields."
    dataString: String @deprecated(reason : "Use `dataRaw` instead which returns JSON.")
    "The document's initial publication date."
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    "The document's Prismic API URL."
    href: String
    "Globally unique identifier. Note that this differs from the `prismicID` field."
    id: ID!
    "The document's language."
    lang: String!
    "The document's most recent publication date"
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    "The document's Prismic ID."
    prismicId: ID!
    "The document's list of tags."
    tags: [String!]!
    "The document's Prismic API ID type."
    type: String!
    "The document's URL derived via the link resolver."
    url: String
}

interface PrismicImageInterface {
    "The image's alternative text."
    alt: String
    "The image's copyright text."
    copyright: String
    "The image's dimensions."
    dimensions: PrismicImageDimensionsType
    fixed: PrismicImageFixedType
    fluid: PrismicImageFluidType
    "The locally downloaded image if `shouldNormalizeImage` returns true."
    localFile: File
    "The image's URL on Prismic's CDN."
    url: String
}

interface PrismicSliceType {
    "The slice label."
    slice_label: String
    "The slice type API ID."
    slice_type: String!
}

union PrismicAllDocumentTypes = PrismicHomepage | PrismicLegalPages

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    childImageSharp: ImageSharp
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
    url: String
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = NO_CHANGE,
        toFormatBase64: ImageFormat = NO_CHANGE,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
    resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResolutions @deprecated(reason : "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
    sizes(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = NO_CHANGE,
        toFormatBase64: ImageFormat = NO_CHANGE,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpSizes @deprecated(reason : "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type ImageSharpResolutions {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpSizes {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

"Embed videos, songs, tweets, slices, etc."
type PrismicEmbedType {
    "The ID of the resource author. Fetched via oEmbed data."
    author_id: ID
    "The name of the author/owner of the resource. Fetched via oEmbed data."
    author_name: String
    "A URL for the author/owner of the resource. Fetched via oEmbed data."
    author_url: String
    "The suggested cache lifetime for this resource, in seconds. Consumers may choose to use this value or not. Fetched via oEmbed data."
    cache_age: String
    "A description for the resource."
    description: String
    "The URL of the resource."
    embed_url: String
    "The height in pixel of the resource. Fetched via oEmbed data."
    height: Int
    "The HTML required to display the resource. The HTML should have no padding or margins. Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities. Fetched via oEmbed data."
    html: String
    "The ID of the resource media. Fetched via oEmbed data."
    media_id: ID
    "The name of the resource."
    name: String
    "The name of the resource provider. Fetched via oEmbed data."
    provider_name: String
    "The URL of the resource provider. Fetched via oEmbed data."
    provider_url: String
    "The width of the resource's thumbnail. Fetched via oEmbed data."
    thumbnail_height: Int
    "A URL to a thumbnail image representing the resource. Fetched via oEmbed data."
    thumbnail_url: String
    "The width of the resource's thumbnail. Fetched via oEmbed data."
    thumbnail_width: Int
    "A text title, describing the resource. Fetched via oEmbed data."
    title: String
    "The resource type. Fetched via oEmbed data."
    type: String
    "The source URL of the resource. Fetched via oEmbed data."
    url: String
    "The oEmbed version number."
    version: String
    "The width in pixel of the resource. Fetched via oEmbed data."
    width: Int
}

"A field for storing geo-coordinates."
type PrismicGeoPointType {
    "The latitude value of the geo-coordinate."
    latitude: Float
    "The longitude value of the geo-coordinate."
    longitude: Float
}

type PrismicHomepage implements Node & PrismicDocument {
    _previewable: ID!
    alternate_languages: [PrismicLinkType!]!
    children: [Node!]!
    data: PrismicHomepageDataType
    dataRaw: JSON!
    dataString: String!
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    href: String!
    id: ID!
    internal: Internal!
    lang: String!
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    parent: Node
    prismicId: ID!
    tags: [String!]!
    type: String!
    url: String
}

type PrismicHomepageCollectionsGroupType {
    collection_image: PrismicImageType
    collection_name: PrismicStructuredTextType
    slug: PrismicStructuredTextType
}

type PrismicHomepageConnection {
    distinct(field: PrismicHomepageFieldsEnum!): [String!]!
    edges: [PrismicHomepageEdge!]!
    group(field: PrismicHomepageFieldsEnum!, limit: Int, skip: Int): [PrismicHomepageGroupConnection!]!
    nodes: [PrismicHomepage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicHomepageDataType {
    collections: [PrismicHomepageCollectionsGroupType]
    hero_image: PrismicImageType
    hero_title: PrismicStructuredTextType
    offer_text: PrismicStructuredTextType
    subheader: PrismicStructuredTextType
}

type PrismicHomepageEdge {
    next: PrismicHomepage
    node: PrismicHomepage!
    previous: PrismicHomepage
}

type PrismicHomepageGroupConnection {
    edges: [PrismicHomepageEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicHomepage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

"Dimensions for images."
type PrismicImageDimensionsType {
    "Height of the image in pixels."
    height: Int!
    "Width of the image in pixels."
    width: Int!
}

type PrismicImageFixedType {
    base64: String!
    height: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String!
    srcWebp: String!
    width: Int!
}

type PrismicImageFluidType {
    aspectRatio: Float!
    base64: String!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String!
    srcWebp: String!
}

"An image thumbnail with constraints."
type PrismicImageThumbnailType implements PrismicImageInterface {
    alt: String
    copyright: String
    dimensions: PrismicImageDimensionsType
    fixed(height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}, width: Int = 400): PrismicImageFixedType
    fluid(imgixParams: ImgixUrlParamsInput = {}, maxHeight: Int, maxWidth: Int = 800, placeholderImgixParams: ImgixUrlParamsInput = {}, srcSetBreakpoints: [Int]): PrismicImageFluidType
    localFile: File
    url(imgixParams: ImgixUrlParamsInput = {}): String
}

"An image field with optional constrained thumbnails."
type PrismicImageType implements PrismicImageInterface {
    alt: String
    copyright: String
    dimensions: PrismicImageDimensionsType
    fixed(height: Int, imgixParams: ImgixUrlParamsInput = {}, placeholderImgixParams: ImgixUrlParamsInput = {}, width: Int = 400): PrismicImageFixedType
    fluid(imgixParams: ImgixUrlParamsInput = {}, maxHeight: Int, maxWidth: Int = 800, placeholderImgixParams: ImgixUrlParamsInput = {}, srcSetBreakpoints: [Int]): PrismicImageFluidType
    localFile: File
    thumbnails: PrismicImageThumbnailsType
    url(imgixParams: ImgixUrlParamsInput = {}): String
}

type PrismicLegalPages implements Node & PrismicDocument {
    _previewable: ID!
    alternate_languages: [PrismicLinkType!]!
    children: [Node!]!
    data: PrismicLegalPagesDataType
    dataRaw: JSON!
    dataString: String!
    first_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    href: String!
    id: ID!
    internal: Internal!
    lang: String!
    last_publication_date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    parent: Node
    prismicId: ID!
    tags: [String!]!
    type: String!
    url: String
}

type PrismicLegalPagesConnection {
    distinct(field: PrismicLegalPagesFieldsEnum!): [String!]!
    edges: [PrismicLegalPagesEdge!]!
    group(field: PrismicLegalPagesFieldsEnum!, limit: Int, skip: Int): [PrismicLegalPagesGroupConnection!]!
    nodes: [PrismicLegalPages!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type PrismicLegalPagesDataType {
    body: PrismicStructuredTextType
    title: PrismicStructuredTextType
}

type PrismicLegalPagesEdge {
    next: PrismicLegalPages
    node: PrismicLegalPages!
    previous: PrismicLegalPages
}

type PrismicLegalPagesGroupConnection {
    edges: [PrismicLegalPagesEdge!]!
    field: String!
    fieldValue: String
    nodes: [PrismicLegalPages!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

"Link to web, media, and internal content."
type PrismicLinkType {
    "If a Document link, the linked document."
    document: PrismicAllDocumentTypes
    "If a Document link, the linked document's Prismic ID."
    id: ID
    "If a Document link, `true` if linked document does not exist, `false` otherwise."
    isBroken: Boolean
    "If a Document link, the linked document's language."
    lang: String
    "The type of link."
    link_type: PrismicLinkTypes!
    "The field's value without transformations exactly as it comes from the Prismic API."
    raw: JSON
    "If a Media link, the size of the file."
    size: Int
    "If a Document link, the linked document's slug."
    slug: String
    "If a Document link, the linked document's list of tags."
    tags: [String]
    "The link's target."
    target: String
    "If a Document link, the linked document's Prismic custom type API ID"
    type: String
    "If a Document link, the linked document's UID."
    uid: String
    "The document's URL derived via the link resolver."
    url: String
}

"A text field with formatting options."
type PrismicStructuredTextType {
    "The HTML value of the text using `prismic-dom` and the HTML serializer."
    html: String
    "The field's value without transformations exactly as it comes from the Prismic API."
    raw: JSON
    "The plain text value of the text using `prismic-dom`."
    text: String
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allPrismicHomepage(filter: PrismicHomepageFilterInput, limit: Int, skip: Int, sort: PrismicHomepageSortInput): PrismicHomepageConnection!
    allPrismicLegalPages(filter: PrismicLegalPagesFilterInput, limit: Int, skip: Int, sort: PrismicLegalPagesSortInput): PrismicLegalPagesConnection!
    allShopifyBlog(filter: ShopifyBlogFilterInput, limit: Int, skip: Int, sort: ShopifyBlogSortInput): ShopifyBlogConnection!
    allShopifyCollection(filter: ShopifyCollectionFilterInput, limit: Int, skip: Int, sort: ShopifyCollectionSortInput): ShopifyCollectionConnection!
    allShopifyPage(filter: ShopifyPageFilterInput, limit: Int, skip: Int, sort: ShopifyPageSortInput): ShopifyPageConnection!
    allShopifyProduct(filter: ShopifyProductFilterInput, limit: Int, skip: Int, sort: ShopifyProductSortInput): ShopifyProductConnection!
    allShopifyProductOption(filter: ShopifyProductOptionFilterInput, limit: Int, skip: Int, sort: ShopifyProductOptionSortInput): ShopifyProductOptionConnection!
    allShopifyProductVariant(filter: ShopifyProductVariantFilterInput, limit: Int, skip: Int, sort: ShopifyProductVariantSortInput): ShopifyProductVariantConnection!
    allShopifyShop(filter: ShopifyShopFilterInput, limit: Int, skip: Int, sort: ShopifyShopSortInput): ShopifyShopConnection!
    allShopifyShopPolicy(filter: ShopifyShopPolicyFilterInput, limit: Int, skip: Int, sort: ShopifyShopPolicySortInput): ShopifyShopPolicyConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    allSiteSearchIndex(filter: SiteSearchIndexFilterInput, limit: Int, skip: Int, sort: SiteSearchIndexSortInput): SiteSearchIndexConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput, url: StringQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
    prismicHomepage(_previewable: IDQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, children: NodeFilterListInput, data: PrismicHomepageDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, parent: NodeFilterInput, prismicId: IDQueryOperatorInput, tags: StringQueryOperatorInput, type: StringQueryOperatorInput, url: StringQueryOperatorInput): PrismicHomepage
    prismicLegalPages(_previewable: IDQueryOperatorInput, alternate_languages: PrismicLinkTypeFilterListInput, children: NodeFilterListInput, data: PrismicLegalPagesDataTypeFilterInput, dataRaw: JSONQueryOperatorInput, dataString: StringQueryOperatorInput, first_publication_date: DateQueryOperatorInput, href: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lang: StringQueryOperatorInput, last_publication_date: DateQueryOperatorInput, parent: NodeFilterInput, prismicId: IDQueryOperatorInput, tags: StringQueryOperatorInput, type: StringQueryOperatorInput, url: StringQueryOperatorInput): PrismicLegalPages
    shopifyBlog(children: NodeFilterListInput, handle: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, shopifyId: StringQueryOperatorInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): ShopifyBlog
    shopifyCollection(children: NodeFilterListInput, description: StringQueryOperatorInput, descriptionHtml: StringQueryOperatorInput, handle: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, products: ShopifyProductFilterListInput, shopifyId: StringQueryOperatorInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): ShopifyCollection
    shopifyPage(body: StringQueryOperatorInput, bodySummary: StringQueryOperatorInput, children: NodeFilterListInput, handle: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, shopifyId: StringQueryOperatorInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput, url: StringQueryOperatorInput): ShopifyPage
    shopifyProduct(availableForSale: BooleanQueryOperatorInput, children: NodeFilterListInput, createdAt: DateQueryOperatorInput, description: StringQueryOperatorInput, descriptionHtml: StringQueryOperatorInput, handle: StringQueryOperatorInput, id: StringQueryOperatorInput, images: ShopifyProductImagesFilterListInput, internal: InternalFilterInput, onlineStoreUrl: StringQueryOperatorInput, options: ShopifyProductOptionFilterListInput, parent: NodeFilterInput, priceRange: ShopifyProductPriceRangeFilterInput, productType: StringQueryOperatorInput, publishedAt: DateQueryOperatorInput, shopifyId: StringQueryOperatorInput, tags: StringQueryOperatorInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput, variants: ShopifyProductVariantFilterListInput, vendor: StringQueryOperatorInput): ShopifyProduct
    shopifyProductOption(children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, shopifyId: StringQueryOperatorInput, values: StringQueryOperatorInput): ShopifyProductOption
    shopifyProductVariant(availableForSale: BooleanQueryOperatorInput, children: NodeFilterListInput, compareAtPrice: StringQueryOperatorInput, compareAtPriceV2: ShopifyProductVariantCompareAtPriceV2FilterInput, id: StringQueryOperatorInput, image: ShopifyProductVariantImageFilterInput, internal: InternalFilterInput, parent: NodeFilterInput, presentmentPrices: ShopifyProductVariantPresentmentPricesFilterInput, price: StringQueryOperatorInput, priceV2: ShopifyProductVariantPriceV2FilterInput, product: ShopifyProductFilterInput, requiresShipping: BooleanQueryOperatorInput, selectedOptions: ShopifyProductVariantSelectedOptionsFilterListInput, shopifyId: StringQueryOperatorInput, sku: StringQueryOperatorInput, title: StringQueryOperatorInput, weight: FloatQueryOperatorInput, weightUnit: StringQueryOperatorInput): ShopifyProductVariant
    shopifyShop(children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, moneyFormat: StringQueryOperatorInput, name: StringQueryOperatorInput, parent: NodeFilterInput): ShopifyShop
    shopifyShopPolicy(body: StringQueryOperatorInput, children: NodeFilterListInput, handle: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, shopifyId: StringQueryOperatorInput, title: StringQueryOperatorInput, type: StringQueryOperatorInput, url: StringQueryOperatorInput): ShopifyShopPolicy
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
    siteSearchIndex(children: NodeFilterListInput, id: StringQueryOperatorInput, index: SiteSearchIndex_IndexQueryOperatorInput, internal: InternalFilterInput, pages: StringQueryOperatorInput, parent: NodeFilterInput): SiteSearchIndex
}

type ShopifyBlog implements Node {
    children: [Node!]!
    handle: String
    id: ID!
    internal: Internal!
    parent: Node
    shopifyId: String
    title: String
    url: String
}

type ShopifyBlogConnection {
    distinct(field: ShopifyBlogFieldsEnum!): [String!]!
    edges: [ShopifyBlogEdge!]!
    group(field: ShopifyBlogFieldsEnum!, limit: Int, skip: Int): [ShopifyBlogGroupConnection!]!
    nodes: [ShopifyBlog!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyBlogEdge {
    next: ShopifyBlog
    node: ShopifyBlog!
    previous: ShopifyBlog
}

type ShopifyBlogGroupConnection {
    edges: [ShopifyBlogEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyBlog!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyCollection implements Node {
    children: [Node!]!
    description: String
    descriptionHtml: String
    handle: String
    id: ID!
    internal: Internal!
    parent: Node
    products: [ShopifyProduct]
    shopifyId: String
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
}

type ShopifyCollectionConnection {
    distinct(field: ShopifyCollectionFieldsEnum!): [String!]!
    edges: [ShopifyCollectionEdge!]!
    group(field: ShopifyCollectionFieldsEnum!, limit: Int, skip: Int): [ShopifyCollectionGroupConnection!]!
    nodes: [ShopifyCollection!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyCollectionEdge {
    next: ShopifyCollection
    node: ShopifyCollection!
    previous: ShopifyCollection
}

type ShopifyCollectionGroupConnection {
    edges: [ShopifyCollectionEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyCollection!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyPage implements Node {
    body: String
    bodySummary: String
    children: [Node!]!
    handle: String
    id: ID!
    internal: Internal!
    parent: Node
    shopifyId: String
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    url: String
}

type ShopifyPageConnection {
    distinct(field: ShopifyPageFieldsEnum!): [String!]!
    edges: [ShopifyPageEdge!]!
    group(field: ShopifyPageFieldsEnum!, limit: Int, skip: Int): [ShopifyPageGroupConnection!]!
    nodes: [ShopifyPage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyPageEdge {
    next: ShopifyPage
    node: ShopifyPage!
    previous: ShopifyPage
}

type ShopifyPageGroupConnection {
    edges: [ShopifyPageEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyPage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProduct implements Node {
    availableForSale: Boolean
    children: [Node!]!
    createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    descriptionHtml: String
    handle: String
    id: ID!
    images: [ShopifyProductImages]
    internal: Internal!
    onlineStoreUrl: String
    options: [ShopifyProductOption]
    parent: Node
    priceRange: ShopifyProductPriceRange
    productType: String
    publishedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    shopifyId: String
    tags: [String]
    title: String
    updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    variants: [ShopifyProductVariant]
    vendor: String
}

type ShopifyProductConnection {
    distinct(field: ShopifyProductFieldsEnum!): [String!]!
    edges: [ShopifyProductEdge!]!
    group(field: ShopifyProductFieldsEnum!, limit: Int, skip: Int): [ShopifyProductGroupConnection!]!
    nodes: [ShopifyProduct!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductEdge {
    next: ShopifyProduct
    node: ShopifyProduct!
    previous: ShopifyProduct
}

type ShopifyProductGroupConnection {
    edges: [ShopifyProductEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyProduct!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductImages {
    altText: String
    id: String
    localFile: File
    originalSrc: String
}

type ShopifyProductOption implements Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    parent: Node
    shopifyId: String
    values: [String]
}

type ShopifyProductOptionConnection {
    distinct(field: ShopifyProductOptionFieldsEnum!): [String!]!
    edges: [ShopifyProductOptionEdge!]!
    group(field: ShopifyProductOptionFieldsEnum!, limit: Int, skip: Int): [ShopifyProductOptionGroupConnection!]!
    nodes: [ShopifyProductOption!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductOptionEdge {
    next: ShopifyProductOption
    node: ShopifyProductOption!
    previous: ShopifyProductOption
}

type ShopifyProductOptionGroupConnection {
    edges: [ShopifyProductOptionEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyProductOption!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductPriceRange {
    maxVariantPrice: ShopifyProductPriceRangeMaxVariantPrice
    minVariantPrice: ShopifyProductPriceRangeMinVariantPrice
}

type ShopifyProductPriceRangeMaxVariantPrice {
    amount: String
    currencyCode: String
}

type ShopifyProductPriceRangeMinVariantPrice {
    amount: String
    currencyCode: String
}

type ShopifyProductVariant implements Node {
    availableForSale: Boolean
    children: [Node!]!
    compareAtPrice: String
    compareAtPriceV2: ShopifyProductVariantCompareAtPriceV2
    id: ID!
    image: ShopifyProductVariantImage
    internal: Internal!
    parent: Node
    presentmentPrices: ShopifyProductVariantPresentmentPrices
    price: String
    priceV2: ShopifyProductVariantPriceV2
    product: ShopifyProduct
    requiresShipping: Boolean
    selectedOptions: [ShopifyProductVariantSelectedOptions]
    shopifyId: String
    sku: String
    title: String
    weight: Float
    weightUnit: String
}

type ShopifyProductVariantCompareAtPriceV2 {
    amount: String
    currencyCode: String
}

type ShopifyProductVariantConnection {
    distinct(field: ShopifyProductVariantFieldsEnum!): [String!]!
    edges: [ShopifyProductVariantEdge!]!
    group(field: ShopifyProductVariantFieldsEnum!, limit: Int, skip: Int): [ShopifyProductVariantGroupConnection!]!
    nodes: [ShopifyProductVariant!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductVariantEdge {
    next: ShopifyProductVariant
    node: ShopifyProductVariant!
    previous: ShopifyProductVariant
}

type ShopifyProductVariantGroupConnection {
    edges: [ShopifyProductVariantEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyProductVariant!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyProductVariantImage {
    altText: String
    id: String
    localFile: File
    originalSrc: String
}

type ShopifyProductVariantPresentmentPrices {
    edges: [ShopifyProductVariantPresentmentPricesEdges]
}

type ShopifyProductVariantPresentmentPricesEdges {
    node: ShopifyProductVariantPresentmentPricesEdgesNode
}

type ShopifyProductVariantPresentmentPricesEdgesNode {
    compareAtPrice: ShopifyProductVariantPresentmentPricesEdgesNodeCompareAtPrice
    price: ShopifyProductVariantPresentmentPricesEdgesNodePrice
}

type ShopifyProductVariantPresentmentPricesEdgesNodeCompareAtPrice {
    amount: String
    currencyCode: String
}

type ShopifyProductVariantPresentmentPricesEdgesNodePrice {
    amount: String
    currencyCode: String
}

type ShopifyProductVariantPriceV2 {
    amount: String
    currencyCode: String
}

type ShopifyProductVariantSelectedOptions {
    name: String
    value: String
}

type ShopifyShop implements Node {
    children: [Node!]!
    description: String
    id: ID!
    internal: Internal!
    moneyFormat: String
    name: String
    parent: Node
}

type ShopifyShopConnection {
    distinct(field: ShopifyShopFieldsEnum!): [String!]!
    edges: [ShopifyShopEdge!]!
    group(field: ShopifyShopFieldsEnum!, limit: Int, skip: Int): [ShopifyShopGroupConnection!]!
    nodes: [ShopifyShop!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyShopEdge {
    next: ShopifyShop
    node: ShopifyShop!
    previous: ShopifyShop
}

type ShopifyShopGroupConnection {
    edges: [ShopifyShopEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyShop!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyShopPolicy implements Node {
    body: String
    children: [Node!]!
    handle: String
    id: ID!
    internal: Internal!
    parent: Node
    shopifyId: String
    title: String
    type: String
    url: String
}

type ShopifyShopPolicyConnection {
    distinct(field: ShopifyShopPolicyFieldsEnum!): [String!]!
    edges: [ShopifyShopPolicyEdge!]!
    group(field: ShopifyShopPolicyFieldsEnum!, limit: Int, skip: Int): [ShopifyShopPolicyGroupConnection!]!
    nodes: [ShopifyShopPolicy!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ShopifyShopPolicyEdge {
    next: ShopifyShopPolicy
    node: ShopifyShopPolicy!
    previous: ShopifyShopPolicy
}

type ShopifyShopPolicyGroupConnection {
    edges: [ShopifyShopPolicyEdge!]!
    field: String!
    fieldValue: String
    nodes: [ShopifyShopPolicy!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    parent: Node
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteGroupConnection {
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    componentPath: String
    context: SitePageContext
    id: ID!
    internal: Internal!
    internalComponentName: String!
    isCreatedByStatefulCreatePages: Boolean
    matchPath: String
    parent: Node
    path: String!
    pluginCreator: SitePlugin
    pluginCreatorId: String
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePageContext {
    handle: String
    id: String
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: SitePluginPackageJson
    parent: Node
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginPackageJson {
    author: String
    dependencies: [SitePluginPackageJsonDependencies]
    description: String
    devDependencies: [SitePluginPackageJsonDevDependencies]
    keywords: [String]
    license: String
    main: String
    name: String
    peerDependencies: [SitePluginPackageJsonPeerDependencies]
    version: String
}

type SitePluginPackageJsonDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonDevDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonPeerDependencies {
    name: String
    version: String
}

type SitePluginPluginOptions {
    accessToken: String
    background_color: String
    cacheDigest: String
    cache_busting_mode: String
    display: String
    fields: [String]
    fonts: [String]
    icon: String
    include_favicon: Boolean
    legacy: Boolean
    name: String
    paginationSize: Int
    path: String
    pathCheck: Boolean
    repositoryName: String
    schemas: SitePluginPluginOptionsSchemas
    shopName: String
    short_name: String
    start_url: String
    theme_color: String
    theme_color_in_head: Boolean
    verbose: Boolean
}

type SitePluginPluginOptionsSchemas {
    homepage: SitePluginPluginOptionsSchemasHomepage
    legal_pages: SitePluginPluginOptionsSchemasLegal_pages
}

type SitePluginPluginOptionsSchemasHomepage {
    Main: SitePluginPluginOptionsSchemasHomepageMain
}

type SitePluginPluginOptionsSchemasHomepageMain {
    collections: SitePluginPluginOptionsSchemasHomepageMainCollections
    hero_image: SitePluginPluginOptionsSchemasHomepageMainHero_image
    hero_title: SitePluginPluginOptionsSchemasHomepageMainHero_title
    offer_text: SitePluginPluginOptionsSchemasHomepageMainOffer_text
    subheader: SitePluginPluginOptionsSchemasHomepageMainSubheader
}

type SitePluginPluginOptionsSchemasHomepageMainCollections {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfig {
    fields: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFields
    label: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFields {
    collection_image: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_image
    collection_name: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_name
    slug: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlug
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_image {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageConfig {
    label: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_name {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlug {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasHomepageMainHero_image {
    config: SitePluginPluginOptionsSchemasHomepageMainHero_imageConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainHero_imageConfig {
    label: String
}

type SitePluginPluginOptionsSchemasHomepageMainHero_title {
    config: SitePluginPluginOptionsSchemasHomepageMainHero_titleConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainHero_titleConfig {
    label: String
    placeholder: String
    single: String
}

type SitePluginPluginOptionsSchemasHomepageMainOffer_text {
    config: SitePluginPluginOptionsSchemasHomepageMainOffer_textConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainOffer_textConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasHomepageMainSubheader {
    config: SitePluginPluginOptionsSchemasHomepageMainSubheaderConfig
    type: String
}

type SitePluginPluginOptionsSchemasHomepageMainSubheaderConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasLegal_pages {
    Main: SitePluginPluginOptionsSchemasLegal_pagesMain
}

type SitePluginPluginOptionsSchemasLegal_pagesMain {
    body: SitePluginPluginOptionsSchemasLegal_pagesMainBody
    title: SitePluginPluginOptionsSchemasLegal_pagesMainTitle
}

type SitePluginPluginOptionsSchemasLegal_pagesMainBody {
    config: SitePluginPluginOptionsSchemasLegal_pagesMainBodyConfig
    type: String
}

type SitePluginPluginOptionsSchemasLegal_pagesMainBodyConfig {
    label: String
    multi: String
    placeholder: String
}

type SitePluginPluginOptionsSchemasLegal_pagesMainTitle {
    config: SitePluginPluginOptionsSchemasLegal_pagesMainTitleConfig
    type: String
}

type SitePluginPluginOptionsSchemasLegal_pagesMainTitleConfig {
    label: String
    placeholder: String
    single: String
}

type SiteSearchIndex implements Node {
    children: [Node!]!
    id: ID!
    index: SiteSearchIndex_Index
    internal: Internal!
    pages: [String]
    parent: Node
}

type SiteSearchIndexConnection {
    distinct(field: SiteSearchIndexFieldsEnum!): [String!]!
    edges: [SiteSearchIndexEdge!]!
    group(field: SiteSearchIndexFieldsEnum!, limit: Int, skip: Int): [SiteSearchIndexGroupConnection!]!
    nodes: [SiteSearchIndex!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteSearchIndexEdge {
    next: SiteSearchIndex
    node: SiteSearchIndex!
    previous: SiteSearchIndex
}

type SiteSearchIndexGroupConnection {
    edges: [SiteSearchIndexEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteSearchIndex!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteSiteMetadata {
    author: String
    description: String
    title: String
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
    url
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum PrismicHomepageFieldsEnum {
    _previewable
    alternate_languages
    alternate_languages___id
    alternate_languages___isBroken
    alternate_languages___lang
    alternate_languages___link_type
    alternate_languages___raw
    alternate_languages___size
    alternate_languages___slug
    alternate_languages___tags
    alternate_languages___target
    alternate_languages___type
    alternate_languages___uid
    alternate_languages___url
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    dataRaw
    dataString
    data___collections
    data___collections___collection_image___alt
    data___collections___collection_image___copyright
    data___collections___collection_image___thumbnails @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___collections___collection_image___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___collections___collection_name___html
    data___collections___collection_name___raw
    data___collections___collection_name___text
    data___collections___slug___html
    data___collections___slug___raw
    data___collections___slug___text
    data___hero_image___alt
    data___hero_image___copyright
    data___hero_image___dimensions___height
    data___hero_image___dimensions___width
    data___hero_image___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___absolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___accessTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___atime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___atimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___base @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___birthTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___birthtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___birthtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___blksize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___blocks @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___changeTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___ctime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___ctimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___dev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___dir @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___ext @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___extension @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___gid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___ino @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___mode @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___modifiedTime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___mtime @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___mtimeMs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___name @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___nlink @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___prettySize @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___publicURL @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___rdev @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___relativeDirectory @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___relativePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___root @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___size @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___sourceInstanceName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___uid @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___localFile___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___thumbnails @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_image___url @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    data___hero_title___html
    data___hero_title___raw
    data___hero_title___text
    data___offer_text___html
    data___offer_text___raw
    data___offer_text___text
    data___subheader___html
    data___subheader___raw
    data___subheader___text
    first_publication_date
    href
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    lang
    last_publication_date
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prismicId
    tags
    type
    url
}

enum PrismicLegalPagesFieldsEnum {
    _previewable
    alternate_languages
    alternate_languages___id
    alternate_languages___isBroken
    alternate_languages___lang
    alternate_languages___link_type
    alternate_languages___raw
    alternate_languages___size
    alternate_languages___slug
    alternate_languages___tags
    alternate_languages___target
    alternate_languages___type
    alternate_languages___uid
    alternate_languages___url
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    dataRaw
    dataString
    data___body___html
    data___body___raw
    data___body___text
    data___title___html
    data___title___raw
    data___title___text
    first_publication_date
    href
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    lang
    last_publication_date
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prismicId
    tags
    type
    url
}

"Types of links."
enum PrismicLinkTypes {
    "Any of the other types"
    Any
    "Internal content"
    Document
    "Internal media content"
    Media
    "URL"
    Web
}

enum ShopifyBlogFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    handle
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    shopifyId
    title
    url
}

enum ShopifyCollectionFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    descriptionHtml
    handle
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    products
    products___availableForSale
    products___children
    products___children___children
    products___children___children___children
    products___children___children___id
    products___children___id
    products___children___internal___content
    products___children___internal___contentDigest
    products___children___internal___description
    products___children___internal___fieldOwners
    products___children___internal___ignoreType
    products___children___internal___mediaType
    products___children___internal___owner
    products___children___internal___type
    products___children___parent___children
    products___children___parent___id
    products___createdAt
    products___description
    products___descriptionHtml
    products___handle
    products___id
    products___images
    products___images___altText
    products___images___id
    products___images___localFile___absolutePath
    products___images___localFile___accessTime
    products___images___localFile___atime
    products___images___localFile___atimeMs
    products___images___localFile___base
    products___images___localFile___birthTime
    products___images___localFile___birthtime
    products___images___localFile___birthtimeMs
    products___images___localFile___blksize
    products___images___localFile___blocks
    products___images___localFile___changeTime
    products___images___localFile___children
    products___images___localFile___ctime
    products___images___localFile___ctimeMs
    products___images___localFile___dev
    products___images___localFile___dir
    products___images___localFile___ext
    products___images___localFile___extension
    products___images___localFile___gid
    products___images___localFile___id
    products___images___localFile___ino
    products___images___localFile___mode
    products___images___localFile___modifiedTime
    products___images___localFile___mtime
    products___images___localFile___mtimeMs
    products___images___localFile___name
    products___images___localFile___nlink
    products___images___localFile___prettySize
    products___images___localFile___publicURL
    products___images___localFile___rdev
    products___images___localFile___relativeDirectory
    products___images___localFile___relativePath
    products___images___localFile___root
    products___images___localFile___size
    products___images___localFile___sourceInstanceName
    products___images___localFile___uid
    products___images___localFile___url
    products___images___originalSrc
    products___internal___content
    products___internal___contentDigest
    products___internal___description
    products___internal___fieldOwners
    products___internal___ignoreType
    products___internal___mediaType
    products___internal___owner
    products___internal___type
    products___onlineStoreUrl
    products___options
    products___options___children
    products___options___children___children
    products___options___children___id
    products___options___id
    products___options___internal___content
    products___options___internal___contentDigest
    products___options___internal___description
    products___options___internal___fieldOwners
    products___options___internal___ignoreType
    products___options___internal___mediaType
    products___options___internal___owner
    products___options___internal___type
    products___options___name
    products___options___parent___children
    products___options___parent___id
    products___options___shopifyId
    products___options___values
    products___parent___children
    products___parent___children___children
    products___parent___children___id
    products___parent___id
    products___parent___internal___content
    products___parent___internal___contentDigest
    products___parent___internal___description
    products___parent___internal___fieldOwners
    products___parent___internal___ignoreType
    products___parent___internal___mediaType
    products___parent___internal___owner
    products___parent___internal___type
    products___parent___parent___children
    products___parent___parent___id
    products___priceRange___maxVariantPrice___amount
    products___priceRange___maxVariantPrice___currencyCode
    products___priceRange___minVariantPrice___amount
    products___priceRange___minVariantPrice___currencyCode
    products___productType
    products___publishedAt
    products___shopifyId
    products___tags
    products___title
    products___updatedAt
    products___variants
    products___variants___availableForSale
    products___variants___children
    products___variants___children___children
    products___variants___children___id
    products___variants___compareAtPrice
    products___variants___compareAtPriceV2___amount
    products___variants___compareAtPriceV2___currencyCode
    products___variants___id
    products___variants___image___altText
    products___variants___image___id
    products___variants___image___originalSrc
    products___variants___internal___content
    products___variants___internal___contentDigest
    products___variants___internal___description
    products___variants___internal___fieldOwners
    products___variants___internal___ignoreType
    products___variants___internal___mediaType
    products___variants___internal___owner
    products___variants___internal___type
    products___variants___parent___children
    products___variants___parent___id
    products___variants___presentmentPrices___edges
    products___variants___price
    products___variants___priceV2___amount
    products___variants___priceV2___currencyCode
    products___variants___product___availableForSale
    products___variants___product___children
    products___variants___product___createdAt
    products___variants___product___description
    products___variants___product___descriptionHtml
    products___variants___product___handle
    products___variants___product___id
    products___variants___product___images
    products___variants___product___onlineStoreUrl
    products___variants___product___options
    products___variants___product___productType
    products___variants___product___publishedAt
    products___variants___product___shopifyId
    products___variants___product___tags
    products___variants___product___title
    products___variants___product___updatedAt
    products___variants___product___variants
    products___variants___product___vendor
    products___variants___requiresShipping
    products___variants___selectedOptions
    products___variants___selectedOptions___name
    products___variants___selectedOptions___value
    products___variants___shopifyId
    products___variants___sku
    products___variants___title
    products___variants___weight
    products___variants___weightUnit
    products___vendor
    shopifyId
    title
    updatedAt
}

enum ShopifyPageFieldsEnum {
    body
    bodySummary
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    handle
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    shopifyId
    title
    updatedAt
    url
}

enum ShopifyProductFieldsEnum {
    availableForSale
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    createdAt
    description
    descriptionHtml
    handle
    id
    images
    images___altText
    images___id
    images___localFile___absolutePath
    images___localFile___accessTime
    images___localFile___atime
    images___localFile___atimeMs
    images___localFile___base
    images___localFile___birthTime
    images___localFile___birthtime
    images___localFile___birthtimeMs
    images___localFile___blksize
    images___localFile___blocks
    images___localFile___changeTime
    images___localFile___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    images___localFile___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    images___localFile___children
    images___localFile___children___children
    images___localFile___children___id
    images___localFile___ctime
    images___localFile___ctimeMs
    images___localFile___dev
    images___localFile___dir
    images___localFile___ext
    images___localFile___extension
    images___localFile___gid
    images___localFile___id
    images___localFile___ino
    images___localFile___internal___content
    images___localFile___internal___contentDigest
    images___localFile___internal___description
    images___localFile___internal___fieldOwners
    images___localFile___internal___ignoreType
    images___localFile___internal___mediaType
    images___localFile___internal___owner
    images___localFile___internal___type
    images___localFile___mode
    images___localFile___modifiedTime
    images___localFile___mtime
    images___localFile___mtimeMs
    images___localFile___name
    images___localFile___nlink
    images___localFile___parent___children
    images___localFile___parent___id
    images___localFile___prettySize
    images___localFile___publicURL
    images___localFile___rdev
    images___localFile___relativeDirectory
    images___localFile___relativePath
    images___localFile___root
    images___localFile___size
    images___localFile___sourceInstanceName
    images___localFile___uid
    images___localFile___url
    images___originalSrc
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    onlineStoreUrl
    options
    options___children
    options___children___children
    options___children___children___children
    options___children___children___id
    options___children___id
    options___children___internal___content
    options___children___internal___contentDigest
    options___children___internal___description
    options___children___internal___fieldOwners
    options___children___internal___ignoreType
    options___children___internal___mediaType
    options___children___internal___owner
    options___children___internal___type
    options___children___parent___children
    options___children___parent___id
    options___id
    options___internal___content
    options___internal___contentDigest
    options___internal___description
    options___internal___fieldOwners
    options___internal___ignoreType
    options___internal___mediaType
    options___internal___owner
    options___internal___type
    options___name
    options___parent___children
    options___parent___children___children
    options___parent___children___id
    options___parent___id
    options___parent___internal___content
    options___parent___internal___contentDigest
    options___parent___internal___description
    options___parent___internal___fieldOwners
    options___parent___internal___ignoreType
    options___parent___internal___mediaType
    options___parent___internal___owner
    options___parent___internal___type
    options___parent___parent___children
    options___parent___parent___id
    options___shopifyId
    options___values
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    priceRange___maxVariantPrice___amount
    priceRange___maxVariantPrice___currencyCode
    priceRange___minVariantPrice___amount
    priceRange___minVariantPrice___currencyCode
    productType
    publishedAt
    shopifyId
    tags
    title
    updatedAt
    variants
    variants___availableForSale
    variants___children
    variants___children___children
    variants___children___children___children
    variants___children___children___id
    variants___children___id
    variants___children___internal___content
    variants___children___internal___contentDigest
    variants___children___internal___description
    variants___children___internal___fieldOwners
    variants___children___internal___ignoreType
    variants___children___internal___mediaType
    variants___children___internal___owner
    variants___children___internal___type
    variants___children___parent___children
    variants___children___parent___id
    variants___compareAtPrice
    variants___compareAtPriceV2___amount
    variants___compareAtPriceV2___currencyCode
    variants___id
    variants___image___altText
    variants___image___id
    variants___image___localFile___absolutePath
    variants___image___localFile___accessTime
    variants___image___localFile___atime
    variants___image___localFile___atimeMs
    variants___image___localFile___base
    variants___image___localFile___birthTime
    variants___image___localFile___birthtime
    variants___image___localFile___birthtimeMs
    variants___image___localFile___blksize
    variants___image___localFile___blocks
    variants___image___localFile___changeTime
    variants___image___localFile___children
    variants___image___localFile___ctime
    variants___image___localFile___ctimeMs
    variants___image___localFile___dev
    variants___image___localFile___dir
    variants___image___localFile___ext
    variants___image___localFile___extension
    variants___image___localFile___gid
    variants___image___localFile___id
    variants___image___localFile___ino
    variants___image___localFile___mode
    variants___image___localFile___modifiedTime
    variants___image___localFile___mtime
    variants___image___localFile___mtimeMs
    variants___image___localFile___name
    variants___image___localFile___nlink
    variants___image___localFile___prettySize
    variants___image___localFile___publicURL
    variants___image___localFile___rdev
    variants___image___localFile___relativeDirectory
    variants___image___localFile___relativePath
    variants___image___localFile___root
    variants___image___localFile___size
    variants___image___localFile___sourceInstanceName
    variants___image___localFile___uid
    variants___image___localFile___url
    variants___image___originalSrc
    variants___internal___content
    variants___internal___contentDigest
    variants___internal___description
    variants___internal___fieldOwners
    variants___internal___ignoreType
    variants___internal___mediaType
    variants___internal___owner
    variants___internal___type
    variants___parent___children
    variants___parent___children___children
    variants___parent___children___id
    variants___parent___id
    variants___parent___internal___content
    variants___parent___internal___contentDigest
    variants___parent___internal___description
    variants___parent___internal___fieldOwners
    variants___parent___internal___ignoreType
    variants___parent___internal___mediaType
    variants___parent___internal___owner
    variants___parent___internal___type
    variants___parent___parent___children
    variants___parent___parent___id
    variants___presentmentPrices___edges
    variants___price
    variants___priceV2___amount
    variants___priceV2___currencyCode
    variants___product___availableForSale
    variants___product___children
    variants___product___children___children
    variants___product___children___id
    variants___product___createdAt
    variants___product___description
    variants___product___descriptionHtml
    variants___product___handle
    variants___product___id
    variants___product___images
    variants___product___images___altText
    variants___product___images___id
    variants___product___images___originalSrc
    variants___product___internal___content
    variants___product___internal___contentDigest
    variants___product___internal___description
    variants___product___internal___fieldOwners
    variants___product___internal___ignoreType
    variants___product___internal___mediaType
    variants___product___internal___owner
    variants___product___internal___type
    variants___product___onlineStoreUrl
    variants___product___options
    variants___product___options___children
    variants___product___options___id
    variants___product___options___name
    variants___product___options___shopifyId
    variants___product___options___values
    variants___product___parent___children
    variants___product___parent___id
    variants___product___productType
    variants___product___publishedAt
    variants___product___shopifyId
    variants___product___tags
    variants___product___title
    variants___product___updatedAt
    variants___product___variants
    variants___product___variants___availableForSale
    variants___product___variants___children
    variants___product___variants___compareAtPrice
    variants___product___variants___id
    variants___product___variants___price
    variants___product___variants___requiresShipping
    variants___product___variants___selectedOptions
    variants___product___variants___shopifyId
    variants___product___variants___sku
    variants___product___variants___title
    variants___product___variants___weight
    variants___product___variants___weightUnit
    variants___product___vendor
    variants___requiresShipping
    variants___selectedOptions
    variants___selectedOptions___name
    variants___selectedOptions___value
    variants___shopifyId
    variants___sku
    variants___title
    variants___weight
    variants___weightUnit
    vendor
}

enum ShopifyProductOptionFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    shopifyId
    values
}

enum ShopifyProductVariantFieldsEnum {
    availableForSale
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    compareAtPrice
    compareAtPriceV2___amount
    compareAtPriceV2___currencyCode
    id
    image___altText
    image___id
    image___localFile___absolutePath
    image___localFile___accessTime
    image___localFile___atime
    image___localFile___atimeMs
    image___localFile___base
    image___localFile___birthTime
    image___localFile___birthtime
    image___localFile___birthtimeMs
    image___localFile___blksize
    image___localFile___blocks
    image___localFile___changeTime
    image___localFile___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___localFile___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___localFile___children
    image___localFile___children___children
    image___localFile___children___id
    image___localFile___ctime
    image___localFile___ctimeMs
    image___localFile___dev
    image___localFile___dir
    image___localFile___ext
    image___localFile___extension
    image___localFile___gid
    image___localFile___id
    image___localFile___ino
    image___localFile___internal___content
    image___localFile___internal___contentDigest
    image___localFile___internal___description
    image___localFile___internal___fieldOwners
    image___localFile___internal___ignoreType
    image___localFile___internal___mediaType
    image___localFile___internal___owner
    image___localFile___internal___type
    image___localFile___mode
    image___localFile___modifiedTime
    image___localFile___mtime
    image___localFile___mtimeMs
    image___localFile___name
    image___localFile___nlink
    image___localFile___parent___children
    image___localFile___parent___id
    image___localFile___prettySize
    image___localFile___publicURL
    image___localFile___rdev
    image___localFile___relativeDirectory
    image___localFile___relativePath
    image___localFile___root
    image___localFile___size
    image___localFile___sourceInstanceName
    image___localFile___uid
    image___localFile___url
    image___originalSrc
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    presentmentPrices___edges
    price
    priceV2___amount
    priceV2___currencyCode
    product___availableForSale
    product___children
    product___children___children
    product___children___children___children
    product___children___children___id
    product___children___id
    product___children___internal___content
    product___children___internal___contentDigest
    product___children___internal___description
    product___children___internal___fieldOwners
    product___children___internal___ignoreType
    product___children___internal___mediaType
    product___children___internal___owner
    product___children___internal___type
    product___children___parent___children
    product___children___parent___id
    product___createdAt
    product___description
    product___descriptionHtml
    product___handle
    product___id
    product___images
    product___images___altText
    product___images___id
    product___images___localFile___absolutePath
    product___images___localFile___accessTime
    product___images___localFile___atime
    product___images___localFile___atimeMs
    product___images___localFile___base
    product___images___localFile___birthTime
    product___images___localFile___birthtime
    product___images___localFile___birthtimeMs
    product___images___localFile___blksize
    product___images___localFile___blocks
    product___images___localFile___changeTime
    product___images___localFile___children
    product___images___localFile___ctime
    product___images___localFile___ctimeMs
    product___images___localFile___dev
    product___images___localFile___dir
    product___images___localFile___ext
    product___images___localFile___extension
    product___images___localFile___gid
    product___images___localFile___id
    product___images___localFile___ino
    product___images___localFile___mode
    product___images___localFile___modifiedTime
    product___images___localFile___mtime
    product___images___localFile___mtimeMs
    product___images___localFile___name
    product___images___localFile___nlink
    product___images___localFile___prettySize
    product___images___localFile___publicURL
    product___images___localFile___rdev
    product___images___localFile___relativeDirectory
    product___images___localFile___relativePath
    product___images___localFile___root
    product___images___localFile___size
    product___images___localFile___sourceInstanceName
    product___images___localFile___uid
    product___images___localFile___url
    product___images___originalSrc
    product___internal___content
    product___internal___contentDigest
    product___internal___description
    product___internal___fieldOwners
    product___internal___ignoreType
    product___internal___mediaType
    product___internal___owner
    product___internal___type
    product___onlineStoreUrl
    product___options
    product___options___children
    product___options___children___children
    product___options___children___id
    product___options___id
    product___options___internal___content
    product___options___internal___contentDigest
    product___options___internal___description
    product___options___internal___fieldOwners
    product___options___internal___ignoreType
    product___options___internal___mediaType
    product___options___internal___owner
    product___options___internal___type
    product___options___name
    product___options___parent___children
    product___options___parent___id
    product___options___shopifyId
    product___options___values
    product___parent___children
    product___parent___children___children
    product___parent___children___id
    product___parent___id
    product___parent___internal___content
    product___parent___internal___contentDigest
    product___parent___internal___description
    product___parent___internal___fieldOwners
    product___parent___internal___ignoreType
    product___parent___internal___mediaType
    product___parent___internal___owner
    product___parent___internal___type
    product___parent___parent___children
    product___parent___parent___id
    product___priceRange___maxVariantPrice___amount
    product___priceRange___maxVariantPrice___currencyCode
    product___priceRange___minVariantPrice___amount
    product___priceRange___minVariantPrice___currencyCode
    product___productType
    product___publishedAt
    product___shopifyId
    product___tags
    product___title
    product___updatedAt
    product___variants
    product___variants___availableForSale
    product___variants___children
    product___variants___children___children
    product___variants___children___id
    product___variants___compareAtPrice
    product___variants___compareAtPriceV2___amount
    product___variants___compareAtPriceV2___currencyCode
    product___variants___id
    product___variants___image___altText
    product___variants___image___id
    product___variants___image___originalSrc
    product___variants___internal___content
    product___variants___internal___contentDigest
    product___variants___internal___description
    product___variants___internal___fieldOwners
    product___variants___internal___ignoreType
    product___variants___internal___mediaType
    product___variants___internal___owner
    product___variants___internal___type
    product___variants___parent___children
    product___variants___parent___id
    product___variants___presentmentPrices___edges
    product___variants___price
    product___variants___priceV2___amount
    product___variants___priceV2___currencyCode
    product___variants___product___availableForSale
    product___variants___product___children
    product___variants___product___createdAt
    product___variants___product___description
    product___variants___product___descriptionHtml
    product___variants___product___handle
    product___variants___product___id
    product___variants___product___images
    product___variants___product___onlineStoreUrl
    product___variants___product___options
    product___variants___product___productType
    product___variants___product___publishedAt
    product___variants___product___shopifyId
    product___variants___product___tags
    product___variants___product___title
    product___variants___product___updatedAt
    product___variants___product___variants
    product___variants___product___vendor
    product___variants___requiresShipping
    product___variants___selectedOptions
    product___variants___selectedOptions___name
    product___variants___selectedOptions___value
    product___variants___shopifyId
    product___variants___sku
    product___variants___title
    product___variants___weight
    product___variants___weightUnit
    product___vendor
    requiresShipping
    selectedOptions
    selectedOptions___name
    selectedOptions___value
    shopifyId
    sku
    title
    weight
    weightUnit
}

enum ShopifyShopFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    moneyFormat
    name
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum ShopifyShopPolicyFieldsEnum {
    body
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    handle
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    shopifyId
    title
    type
    url
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    port
    siteMetadata___author
    siteMetadata___description
    siteMetadata___title
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    componentPath
    context___handle
    context___id
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isCreatedByStatefulCreatePages
    matchPath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreatorId
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson___author
    pluginCreator___packageJson___dependencies
    pluginCreator___packageJson___dependencies___name
    pluginCreator___packageJson___dependencies___version
    pluginCreator___packageJson___description
    pluginCreator___packageJson___devDependencies
    pluginCreator___packageJson___devDependencies___name
    pluginCreator___packageJson___devDependencies___version
    pluginCreator___packageJson___keywords
    pluginCreator___packageJson___license
    pluginCreator___packageJson___main
    pluginCreator___packageJson___name
    pluginCreator___packageJson___peerDependencies
    pluginCreator___packageJson___peerDependencies___name
    pluginCreator___packageJson___peerDependencies___version
    pluginCreator___packageJson___version
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions___accessToken
    pluginCreator___pluginOptions___background_color
    pluginCreator___pluginOptions___cacheDigest
    pluginCreator___pluginOptions___cache_busting_mode
    pluginCreator___pluginOptions___display
    pluginCreator___pluginOptions___fields
    pluginCreator___pluginOptions___fonts
    pluginCreator___pluginOptions___icon
    pluginCreator___pluginOptions___include_favicon
    pluginCreator___pluginOptions___legacy
    pluginCreator___pluginOptions___name
    pluginCreator___pluginOptions___paginationSize
    pluginCreator___pluginOptions___path
    pluginCreator___pluginOptions___pathCheck
    pluginCreator___pluginOptions___repositoryName
    pluginCreator___pluginOptions___shopName
    pluginCreator___pluginOptions___short_name
    pluginCreator___pluginOptions___start_url
    pluginCreator___pluginOptions___theme_color
    pluginCreator___pluginOptions___theme_color_in_head
    pluginCreator___pluginOptions___verbose
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson___author
    packageJson___dependencies
    packageJson___dependencies___name
    packageJson___dependencies___version
    packageJson___description
    packageJson___devDependencies
    packageJson___devDependencies___name
    packageJson___devDependencies___version
    packageJson___keywords
    packageJson___license
    packageJson___main
    packageJson___name
    packageJson___peerDependencies
    packageJson___peerDependencies___name
    packageJson___peerDependencies___version
    packageJson___version
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions___accessToken
    pluginOptions___background_color
    pluginOptions___cacheDigest
    pluginOptions___cache_busting_mode
    pluginOptions___display
    pluginOptions___fields
    pluginOptions___fonts
    pluginOptions___icon
    pluginOptions___include_favicon
    pluginOptions___legacy
    pluginOptions___name
    pluginOptions___paginationSize
    pluginOptions___path
    pluginOptions___pathCheck
    pluginOptions___repositoryName
    pluginOptions___shopName
    pluginOptions___short_name
    pluginOptions___start_url
    pluginOptions___theme_color
    pluginOptions___theme_color_in_head
    pluginOptions___verbose
    resolve
    ssrAPIs
    version
}

enum SiteSearchIndexFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    index
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    pages
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SortOrderEnum {
    ASC
    DESC
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
    url: StringQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input IDQueryOperatorInput {
    eq: ID
    in: [ID]
    ne: ID
    nin: [ID]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
    resolutions: ImageSharpResolutionsFilterInput
    sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ImgixUrlParamsInput {
    "Specifies an aspect ratio to maintain when resizing and cropping the image."
    ar: String
    "Applies automatic enhancements to images. [See docs](https://docs.imgix.com/apis/url/auto)."
    auto: String
    "Alias for `blend`."
    b: String
    "Alias for `blendAlign`."
    ba: String
    "Alias for `blendAlpha`."
    balph: Int
    "Alias for `blendCrop`."
    bc: String
    "Alias for `blendFit`."
    bf: String
    "Colors the background of padded and partially-transparent images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/bg)."
    bg: String
    "Alias for `blendH`."
    bh: Int
    "Specifies the location of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend)."
    blend: String
    "Changes the blend alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/blending/blend-align)."
    blendAlign: String
    "Changes the alpha of the blend image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/blending/blend-alpha)."
    blendAlpha: Int
    "Alias for `blendColor`."
    blendClr: String
    "Specifies a color to use when applying the blend. [See docs](https://docs.imgix.com/apis/url/blending/blend-color)."
    blendColor: String
    "Specifies the type of crop for blend images. [See docs](https://docs.imgix.com/apis/url/blending/blend-crop)."
    blendCrop: String
    "Specifies the fit mode for blend images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/blending/blend-fit)."
    blendFit: String
    "Adjusts the height of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-h)."
    blendH: Int
    "Sets the blend mode for a blend image. Default: `overlay`. [See docs](https://docs.imgix.com/apis/url/blending/blend-mode)."
    blendMode: String
    "Applies padding to the blend image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-pad)."
    blendPad: Int
    "Adjusts the size of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-size)."
    blendSize: String
    "Adjusts the width of the blend image. [See docs](https://docs.imgix.com/apis/url/blending/blend-w)."
    blendW: Int
    "Adjusts the x-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-x)."
    blendX: Int
    "Adjusts the y-offset of the blend image relative to its parent. Default: `0`. [See docs](https://docs.imgix.com/apis/url/blending/blend-y)."
    blendY: Int
    "Alias for `blendAlign`."
    blendalign: String
    "Alias for `blendAlpha`."
    blendalpha: Int
    "Alias for `blendColor`."
    blendclr: String
    "Alias for `blendColor`."
    blendcolor: String
    "Alias for `blendCrop`."
    blendcrop: String
    "Alias for `blendFit`."
    blendfit: String
    "Alias for `blendH`."
    blendh: Int
    "Alias for `blendMode`."
    blendmode: String
    "Alias for `blendPad`."
    blendpad: Int
    "Alias for `blendSize`."
    blendsize: String
    "Alias for `blendW`."
    blendw: Int
    "Alias for `blendX`."
    blendx: Int
    "Alias for `blendY`."
    blendy: Int
    "Applies a gaussian blur to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/blur)."
    blur: Int
    "Alias for `blendMode`."
    bm: String
    "Applies a border to an image. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border)."
    border: String
    "Sets bottom border of an image."
    borderBottom: Int
    "Sets left border of an image."
    borderLeft: Int
    "Sets the outer radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius)."
    borderRadius: String
    "Sets the inner radius of the image's border in pixels. [See docs](https://docs.imgix.com/apis/url/border-and-padding/border-radius-inner)."
    borderRadiusInner: String
    "Sets right border of an image."
    borderRight: Int
    "Sets top border of an image."
    borderTop: Int
    "Alias for `blendPad`."
    bp: Int
    "Adjusts the brightness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/bri)."
    bri: Int
    "Alias for `blendSize`."
    bs: String
    "Alias for `blendW`."
    bw: Int
    "Alias for `blendX`."
    bx: Int
    "Alias for `blendY`."
    by: Int
    "Sets one or more Client-Hints headers. [See docs](https://docs.imgix.com/apis/url/format/ch)."
    ch: String
    "Specifies the output chroma subsampling rate. Default: `420`. [See docs](https://docs.imgix.com/apis/url/format/chromasub)."
    chromasub: Int
    "Limits the number of unique colors in an image. [See docs](https://docs.imgix.com/apis/url/format/colorquant)."
    colorquant: Int
    "Specifies how many colors to include in a palette-extraction response. Default: `6`. [See docs](https://docs.imgix.com/apis/url/color-palette/colors)."
    colors: Int
    "Adjusts the contrast of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/con)."
    con: Int
    "Specifies the radius value for a rounded corner mask. [See docs](https://docs.imgix.com/apis/url/mask/corner-radius)."
    cornerRadius: String
    "Specifies how to crop an image. [See docs](https://docs.imgix.com/apis/url/size/crop)."
    crop: String
    "Specifies the color space of the output image. [See docs](https://docs.imgix.com/apis/url/format/cs)."
    cs: String
    "Forces a URL to use send-file in its response. [See docs](https://docs.imgix.com/apis/url/format/dl)."
    dl: String
    "Sets the DPI value in the EXIF header. [See docs](https://docs.imgix.com/apis/url/format/dpi)."
    dpi: Int
    "Adjusts the device-pixel ratio of the output image. Default: `1`. [See docs](https://docs.imgix.com/apis/url/dpr)."
    dpr: Float
    "Applies a duotone effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/duotone)."
    duotone: String
    "Changes the alpha of the duotone effect atop the source image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/stylize/duotone-alpha)."
    duotoneAlpha: Int
    "Adjusts the exposure of the output image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/exp)."
    exp: Int
    "A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code. [See docs](https://docs.imgix.com/apis/url/expires)."
    expires: String
    "Alias for `fit`."
    f: String
    "Selects a face to crop to. [See docs](https://docs.imgix.com/apis/url/face-detection/faceindex)."
    faceindex: Int
    "Adjusts padding around a selected face. Default: `1`. [See docs](https://docs.imgix.com/apis/url/face-detection/facepad)."
    facepad: Float
    "Specifies that face data should be included in output when combined with `fm=json`. [See docs](https://docs.imgix.com/apis/url/face-detection/faces)."
    faces: Int
    "Determines how to fill in additional space created by the fit setting. [See docs](https://docs.imgix.com/apis/url/fill/fill)."
    fill: String
    "Sets the fill color for images with additional space created by the fit setting. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/fill/fill-color)."
    fillColor: String
    "Alias for `fillColor`."
    fillcolor: String
    "Specifies how to map the source image to the output image dimensions. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/size/fit)."
    fit: String
    "Flips an image on a specified axis. [See docs](https://docs.imgix.com/apis/url/rotation/flip)."
    flip: String
    "Changes the format of the output image. [See docs](https://docs.imgix.com/apis/url/format/fm)."
    fm: String
    "Displays crosshairs identifying the location of the set focal point. Default: `false`. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-debug)."
    fpDebug: Boolean
    "Sets the relative horizontal value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-x)."
    fpX: Int
    "Sets the relative vertical value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-y)."
    fpY: Int
    "Sets the relative zoom value for the focal point of an image. [See docs](https://docs.imgix.com/apis/url/focalpoint-crop/fp-z)."
    fpZ: Int
    "Adjusts the gamma of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/gam)."
    gam: Int
    "Sets grid colors for the transparency checkerboard grid."
    gridColors: String
    "Sets grid size for the transparency checkerboard grid."
    gridSize: Int
    "Adjusts the height of the output image. [See docs](https://docs.imgix.com/apis/url/size/h)."
    h: Int
    "Alias for `h`."
    height: Int
    "Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/high)."
    high: Int
    "Applies a half-tone effect to the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/htn)."
    htn: Int
    "Adjusts the hue of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/hue)."
    hue: Int
    "Alias for `invert`."
    inv: Boolean
    "Inverts the colors on the source image. Default: `false`. [See docs](https://docs.imgix.com/apis/url/adjustment/invert)."
    invert: Boolean
    "Specifies that the output image should be a lossless variant. Default: `false`. [See docs](https://docs.imgix.com/apis/url/format/lossless)."
    lossless: Boolean
    "Alias for `mark`."
    m: String
    "Alias for `markAlign`."
    ma: String
    "Alias for `markAlpha`."
    malph: Int
    "Specifies the location of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark)."
    mark: String
    "Changes the watermark alignment relative to the parent image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-align)."
    markAlign: String
    "Changes the alpha of the watermark image. Default: `100`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-alpha)."
    markAlpha: Int
    "Changes base URL of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-base)."
    markBase: String
    "Specifies the fit mode for watermark images. Default: `clip`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-fit)."
    markFit: String
    "Adjusts the height of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-h)."
    markH: Int
    "Applies padding to the watermark image. Default: `10`. [See docs](https://docs.imgix.com/apis/url/watermark/mark-pad)."
    markPad: Int
    "Adjusts the scale of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-scale)."
    markScale: Int
    "Adjusts the width of the watermark image. [See docs](https://docs.imgix.com/apis/url/watermark/mark-w)."
    markW: Int
    "Adjusts the x-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-x)."
    markX: Int
    "Adjusts the y-offset of the watermark image relative to its parent. [See docs](https://docs.imgix.com/apis/url/watermark/mark-y)."
    markY: Int
    "Alias for `markAlign`."
    markalign: String
    "Alias for `markAlpha`."
    markalpha: Int
    "Alias for `markBase`."
    markbase: String
    "Alias for `markFit`."
    markfit: String
    "Alias for `markH`."
    markh: Int
    "Alias for `markPad`."
    markpad: Int
    "Alias for `markScale`."
    markscale: Int
    "Alias for `markW`."
    markw: Int
    "Alias for `markX`."
    markx: Int
    "Alias for `markY`."
    marky: Int
    "Defines the type of mask and specifies the URL if that type is selected. [See docs](https://docs.imgix.com/apis/url/mask)."
    mask: String
    "Colors the background of the transparent mask area of images. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/mask/mask-bg)."
    maskBg: String
    "Alias for `maskBg`."
    maskbg: String
    "Specifies the maximum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-height)."
    maxH: Int
    "Alias for `maxH`."
    maxHeight: Int
    "Specifies the maximum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/max-width)."
    maxW: Int
    "Alias for `maxW`."
    maxWidth: Int
    "Alias for `markBase`."
    mb: String
    "Alias for `markFit`."
    mf: String
    "Alias for `markH`."
    mh: Int
    "Specifies the minimum height of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-height)."
    minH: Int
    "Alias for `minH`."
    minHeight: Int
    "Specifies the minimum width of the output image in pixels. [See docs](https://docs.imgix.com/apis/url/size/min-width)."
    minW: Int
    "Alias for `minW`."
    minWidth: Int
    "Alias for `monochrome`."
    mono: String
    "Applies a monochrome effect to the source image. [See docs](https://docs.imgix.com/apis/url/stylize/monochrome)."
    monochrome: String
    "Alias for `markPad`."
    mp: Int
    "Alias for `markScale`."
    ms: Int
    "Alias for `markW`."
    mw: Int
    "Alias for `markX`."
    mx: Int
    "Alias for `markY`."
    my: Int
    "Reduces the noise in an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nr)."
    nr: Int
    "Provides a threshold by which to sharpen an image. Default: `20`. [See docs](https://docs.imgix.com/apis/url/noise-reduction/nrs)."
    nrs: Int
    "Alias for `orient`."
    or: Int
    "Changes the image orientation. [See docs](https://docs.imgix.com/apis/url/rotation/orient)."
    orient: Int
    "Pads an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/border-and-padding/pad)."
    pad: Int
    "Sets bottom padding of an image."
    padBottom: Int
    "Sets left padding of an image."
    padLeft: Int
    "Sets right padding of an image."
    padRight: Int
    "Sets top padding of an image."
    padTop: Int
    "Selects a page from a PDF for display. Default: `1`. [See docs](https://docs.imgix.com/apis/url/pdf-page-number)."
    page: Int
    "Specifies an output format for palette-extraction. [See docs](https://docs.imgix.com/apis/url/color-palette/palette)."
    palette: String
    "Specifies a CSS prefix for all classes in palette-extraction. Default: `image`. [See docs](https://docs.imgix.com/apis/url/color-palette/prefix)."
    prefix: String
    "Applies a pixelation effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/px)."
    px: Int
    "Adjusts the quality of an output image. Default: `75`. [See docs](https://docs.imgix.com/apis/url/format/q)."
    q: Int
    "Crops an image to a specified rectangle. [See docs](https://docs.imgix.com/apis/url/size/rect)."
    rect: String
    "Rotates an image by a specified number of degrees. Default: `0`. [See docs](https://docs.imgix.com/apis/url/rotation/rot)."
    rot: Float
    "Adjusts the saturation of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sat)."
    sat: Int
    "Applies a sepia effect to an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/stylize/sepia)."
    sepia: Int
    "Adjusts the highlights of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/shad)."
    shad: Float
    "Adjusts the sharpness of the source image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/sharp)."
    sharp: Float
    "Alias for `txt`."
    t: String
    "Alias for `txtAlign`."
    ta: String
    "Alias for `txtColor`."
    tc: String
    "Alias for `txtClip`."
    tcl: String
    "Alias for `txtFont`."
    tf: String
    "Alias for `txtLine`."
    tl: Int
    "Alias for `txtPad`."
    tp: Int
    "Adds checkerboard behind images which support transparency."
    transparency: String
    "Trims the source image. [See docs](https://docs.imgix.com/apis/url/trim/trim)."
    trim: String
    "Specifies a trim color on a trim operation. [See docs](https://docs.imgix.com/apis/url/trim/trim-color)."
    trimColor: String
    "Specifies the mean difference on a trim operation. Default: `11`. [See docs](https://docs.imgix.com/apis/url/trim/trim-md)."
    trimMd: Float
    "Pads the area of the source image before trimming. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-pad)."
    trimPad: Int
    "Specifies the standard deviation on a trim operation. Default: `10`. [See docs](https://docs.imgix.com/apis/url/trim/trim-sd)."
    trimSd: Float
    "Specifies the tolerance on a trim operation. Default: `0`. [See docs](https://docs.imgix.com/apis/url/trim/trim-tol)."
    trimTol: Float
    "Alias for `trimColor`."
    trimcolor: String
    "Alias for `trimMd`."
    trimmd: Float
    "Alias for `trimPad`."
    trimpad: Int
    "Alias for `trimSd`."
    trimsd: Float
    "Alias for `trimTol`."
    trimtol: Float
    "Alias for `txtShad`."
    tsh: Float
    "Alias for `txtSize`."
    tsz: Int
    "Alias for `txtTrack`."
    tt: Int
    "Sets the text string to render. [See docs](https://docs.imgix.com/apis/url/text/txt)."
    txt: String
    "Sets the vertical and horizontal alignment of rendered text relative to the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-align)."
    txtAlign: String
    "Sets the clipping properties of rendered text. Default: `end`. [See docs](https://docs.imgix.com/apis/url/text/txt-clip)."
    txtClip: String
    "Alias for `txtColor`."
    txtClr: String
    "Specifies the color of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-color)."
    txtColor: String
    "Specifies the fit approach for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-fit)."
    txtFit: String
    "Selects a font for rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-font)."
    txtFont: String
    "Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-lead)."
    txtLead: Int
    "Controls the level of ligature substitution. [See docs](https://docs.imgix.com/apis/url/text/txt-lig)."
    txtLig: Int
    "Outlines the rendered text with a specified color. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-line)."
    txtLine: Int
    "Alias for `txtLineColor`."
    txtLineClr: String
    "Specifies a text outline color. Default: `fff`. [See docs](https://docs.imgix.com/apis/url/text/txt-line-color)."
    txtLineColor: String
    "Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image. [See docs](https://docs.imgix.com/apis/url/text/txt-pad)."
    txtPad: Int
    "Applies a shadow to rendered text. Default: `0`. [See docs](https://docs.imgix.com/apis/url/text/txt-shad)."
    txtShad: Float
    "Sets the font size of rendered text. Default: `12`. [See docs](https://docs.imgix.com/apis/url/text/txt-size)."
    txtSize: Int
    "Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint. Default: `0`. [See docs](https://docs.imgix.com/apis/url/typesetting/txt-track)."
    txtTrack: Int
    "Sets the width of rendered text. [See docs](https://docs.imgix.com/apis/url/text/txt-width)."
    txtWidth: Int
    "Alias for `txtAlign`."
    txtalign: String
    "Alias for `txtClip`."
    txtclip: String
    "Alias for `txtColor`."
    txtclr: String
    "Alias for `txtColor`."
    txtcolor: String
    "Alias for `txtFit`."
    txtfit: String
    "Alias for `txtFont`."
    txtfont: String
    "Alias for `txtLead`."
    txtlead: Int
    "Alias for `txtLig`."
    txtlig: Int
    "Alias for `txtLine`."
    txtline: Int
    "Alias for `txtLineColor`."
    txtlineclr: String
    "Alias for `txtLineColor`."
    txtlinecolor: String
    "Alias for `txtPad`."
    txtpad: Int
    "Alias for `txtShad`."
    txtshad: Float
    "Alias for `txtSize`."
    txtsize: Int
    "Alias for `txtTrack`."
    txttrack: Int
    "Alias for `txtWidth`."
    txtwidth: Int
    "Sharpens the source image using an unsharp mask. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/usm)."
    usm: Int
    "Specifies the radius for an unsharp mask operation. Default: `2.5`. [See docs](https://docs.imgix.com/apis/url/adjustment/usmrad)."
    usmrad: Float
    "Adjusts the vibrance of an image. Default: `0`. [See docs](https://docs.imgix.com/apis/url/adjustment/vib)."
    vib: Int
    "Adjusts the width of the output image. [See docs](https://docs.imgix.com/apis/url/size/w)."
    w: Int
    "Alias for `w`."
    width: Int
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input PrismicHomepageCollectionsGroupTypeFilterInput {
    collection_image: PrismicImageTypeFilterInput
    collection_name: PrismicStructuredTextTypeFilterInput
    slug: PrismicStructuredTextTypeFilterInput
}

input PrismicHomepageCollectionsGroupTypeFilterListInput {
    elemMatch: PrismicHomepageCollectionsGroupTypeFilterInput
}

input PrismicHomepageDataTypeFilterInput {
    collections: PrismicHomepageCollectionsGroupTypeFilterListInput
    hero_image: PrismicImageTypeFilterInput
    hero_title: PrismicStructuredTextTypeFilterInput
    offer_text: PrismicStructuredTextTypeFilterInput
    subheader: PrismicStructuredTextTypeFilterInput
}

input PrismicHomepageFilterInput {
    _previewable: IDQueryOperatorInput
    alternate_languages: PrismicLinkTypeFilterListInput
    children: NodeFilterListInput
    data: PrismicHomepageDataTypeFilterInput
    dataRaw: JSONQueryOperatorInput
    dataString: StringQueryOperatorInput
    first_publication_date: DateQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lang: StringQueryOperatorInput
    last_publication_date: DateQueryOperatorInput
    parent: NodeFilterInput
    prismicId: IDQueryOperatorInput
    tags: StringQueryOperatorInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicHomepageSortInput {
    fields: [PrismicHomepageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicImageDimensionsTypeFilterInput {
    height: IntQueryOperatorInput
    width: IntQueryOperatorInput
}

input PrismicImageFixedTypeFilterInput {
    base64: StringQueryOperatorInput
    height: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input PrismicImageFluidTypeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
}

input PrismicImageThumbnailsTypeQueryOperatorInput {
    eq: PrismicImageThumbnailsType
    in: [PrismicImageThumbnailsType]
    ne: PrismicImageThumbnailsType
    nin: [PrismicImageThumbnailsType]
}

input PrismicImageTypeFilterInput {
    alt: StringQueryOperatorInput
    copyright: StringQueryOperatorInput
    dimensions: PrismicImageDimensionsTypeFilterInput
    fixed: PrismicImageFixedTypeFilterInput
    fluid: PrismicImageFluidTypeFilterInput
    localFile: FileFilterInput
    thumbnails: PrismicImageThumbnailsTypeQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicLegalPagesDataTypeFilterInput {
    body: PrismicStructuredTextTypeFilterInput
    title: PrismicStructuredTextTypeFilterInput
}

input PrismicLegalPagesFilterInput {
    _previewable: IDQueryOperatorInput
    alternate_languages: PrismicLinkTypeFilterListInput
    children: NodeFilterListInput
    data: PrismicLegalPagesDataTypeFilterInput
    dataRaw: JSONQueryOperatorInput
    dataString: StringQueryOperatorInput
    first_publication_date: DateQueryOperatorInput
    href: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lang: StringQueryOperatorInput
    last_publication_date: DateQueryOperatorInput
    parent: NodeFilterInput
    prismicId: IDQueryOperatorInput
    tags: StringQueryOperatorInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicLegalPagesSortInput {
    fields: [PrismicLegalPagesFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input PrismicLinkTypeFilterInput {
    id: IDQueryOperatorInput
    isBroken: BooleanQueryOperatorInput
    lang: StringQueryOperatorInput
    link_type: PrismicLinkTypesQueryOperatorInput
    raw: JSONQueryOperatorInput
    size: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    tags: StringQueryOperatorInput
    target: StringQueryOperatorInput
    type: StringQueryOperatorInput
    uid: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input PrismicLinkTypeFilterListInput {
    elemMatch: PrismicLinkTypeFilterInput
}

input PrismicLinkTypesQueryOperatorInput {
    eq: PrismicLinkTypes
    in: [PrismicLinkTypes]
    ne: PrismicLinkTypes
    nin: [PrismicLinkTypes]
}

input PrismicStructuredTextTypeFilterInput {
    html: StringQueryOperatorInput
    raw: JSONQueryOperatorInput
    text: StringQueryOperatorInput
}

input ShopifyBlogFilterInput {
    children: NodeFilterListInput
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    shopifyId: StringQueryOperatorInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ShopifyBlogSortInput {
    fields: [ShopifyBlogFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyCollectionFilterInput {
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    descriptionHtml: StringQueryOperatorInput
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    products: ShopifyProductFilterListInput
    shopifyId: StringQueryOperatorInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
}

input ShopifyCollectionSortInput {
    fields: [ShopifyCollectionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyPageFilterInput {
    body: StringQueryOperatorInput
    bodySummary: StringQueryOperatorInput
    children: NodeFilterListInput
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    shopifyId: StringQueryOperatorInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
    url: StringQueryOperatorInput
}

input ShopifyPageSortInput {
    fields: [ShopifyPageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyProductFilterInput {
    availableForSale: BooleanQueryOperatorInput
    children: NodeFilterListInput
    createdAt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionHtml: StringQueryOperatorInput
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
    images: ShopifyProductImagesFilterListInput
    internal: InternalFilterInput
    onlineStoreUrl: StringQueryOperatorInput
    options: ShopifyProductOptionFilterListInput
    parent: NodeFilterInput
    priceRange: ShopifyProductPriceRangeFilterInput
    productType: StringQueryOperatorInput
    publishedAt: DateQueryOperatorInput
    shopifyId: StringQueryOperatorInput
    tags: StringQueryOperatorInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
    variants: ShopifyProductVariantFilterListInput
    vendor: StringQueryOperatorInput
}

input ShopifyProductFilterListInput {
    elemMatch: ShopifyProductFilterInput
}

input ShopifyProductImagesFilterInput {
    altText: StringQueryOperatorInput
    id: StringQueryOperatorInput
    localFile: FileFilterInput
    originalSrc: StringQueryOperatorInput
}

input ShopifyProductImagesFilterListInput {
    elemMatch: ShopifyProductImagesFilterInput
}

input ShopifyProductOptionFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
    shopifyId: StringQueryOperatorInput
    values: StringQueryOperatorInput
}

input ShopifyProductOptionFilterListInput {
    elemMatch: ShopifyProductOptionFilterInput
}

input ShopifyProductOptionSortInput {
    fields: [ShopifyProductOptionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyProductPriceRangeFilterInput {
    maxVariantPrice: ShopifyProductPriceRangeMaxVariantPriceFilterInput
    minVariantPrice: ShopifyProductPriceRangeMinVariantPriceFilterInput
}

input ShopifyProductPriceRangeMaxVariantPriceFilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductPriceRangeMinVariantPriceFilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductSortInput {
    fields: [ShopifyProductFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyProductVariantCompareAtPriceV2FilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductVariantFilterInput {
    availableForSale: BooleanQueryOperatorInput
    children: NodeFilterListInput
    compareAtPrice: StringQueryOperatorInput
    compareAtPriceV2: ShopifyProductVariantCompareAtPriceV2FilterInput
    id: StringQueryOperatorInput
    image: ShopifyProductVariantImageFilterInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    presentmentPrices: ShopifyProductVariantPresentmentPricesFilterInput
    price: StringQueryOperatorInput
    priceV2: ShopifyProductVariantPriceV2FilterInput
    product: ShopifyProductFilterInput
    requiresShipping: BooleanQueryOperatorInput
    selectedOptions: ShopifyProductVariantSelectedOptionsFilterListInput
    shopifyId: StringQueryOperatorInput
    sku: StringQueryOperatorInput
    title: StringQueryOperatorInput
    weight: FloatQueryOperatorInput
    weightUnit: StringQueryOperatorInput
}

input ShopifyProductVariantFilterListInput {
    elemMatch: ShopifyProductVariantFilterInput
}

input ShopifyProductVariantImageFilterInput {
    altText: StringQueryOperatorInput
    id: StringQueryOperatorInput
    localFile: FileFilterInput
    originalSrc: StringQueryOperatorInput
}

input ShopifyProductVariantPresentmentPricesEdgesFilterInput {
    node: ShopifyProductVariantPresentmentPricesEdgesNodeFilterInput
}

input ShopifyProductVariantPresentmentPricesEdgesFilterListInput {
    elemMatch: ShopifyProductVariantPresentmentPricesEdgesFilterInput
}

input ShopifyProductVariantPresentmentPricesEdgesNodeCompareAtPriceFilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductVariantPresentmentPricesEdgesNodeFilterInput {
    compareAtPrice: ShopifyProductVariantPresentmentPricesEdgesNodeCompareAtPriceFilterInput
    price: ShopifyProductVariantPresentmentPricesEdgesNodePriceFilterInput
}

input ShopifyProductVariantPresentmentPricesEdgesNodePriceFilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductVariantPresentmentPricesFilterInput {
    edges: ShopifyProductVariantPresentmentPricesEdgesFilterListInput
}

input ShopifyProductVariantPriceV2FilterInput {
    amount: StringQueryOperatorInput
    currencyCode: StringQueryOperatorInput
}

input ShopifyProductVariantSelectedOptionsFilterInput {
    name: StringQueryOperatorInput
    value: StringQueryOperatorInput
}

input ShopifyProductVariantSelectedOptionsFilterListInput {
    elemMatch: ShopifyProductVariantSelectedOptionsFilterInput
}

input ShopifyProductVariantSortInput {
    fields: [ShopifyProductVariantFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyShopFilterInput {
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    moneyFormat: StringQueryOperatorInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
}

input ShopifyShopPolicyFilterInput {
    body: StringQueryOperatorInput
    children: NodeFilterListInput
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    shopifyId: StringQueryOperatorInput
    title: StringQueryOperatorInput
    type: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input ShopifyShopPolicySortInput {
    fields: [ShopifyShopPolicyFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input ShopifyShopSortInput {
    fields: [ShopifyShopFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
    handle: StringQueryOperatorInput
    id: StringQueryOperatorInput
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
    context: SitePageContextFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
    author: StringQueryOperatorInput
    dependencies: SitePluginPackageJsonDependenciesFilterListInput
    description: StringQueryOperatorInput
    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
    keywords: StringQueryOperatorInput
    license: StringQueryOperatorInput
    main: StringQueryOperatorInput
    name: StringQueryOperatorInput
    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
    accessToken: StringQueryOperatorInput
    background_color: StringQueryOperatorInput
    cacheDigest: StringQueryOperatorInput
    cache_busting_mode: StringQueryOperatorInput
    display: StringQueryOperatorInput
    fields: StringQueryOperatorInput
    fonts: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    include_favicon: BooleanQueryOperatorInput
    legacy: BooleanQueryOperatorInput
    name: StringQueryOperatorInput
    paginationSize: IntQueryOperatorInput
    path: StringQueryOperatorInput
    pathCheck: BooleanQueryOperatorInput
    repositoryName: StringQueryOperatorInput
    schemas: SitePluginPluginOptionsSchemasFilterInput
    shopName: StringQueryOperatorInput
    short_name: StringQueryOperatorInput
    start_url: StringQueryOperatorInput
    theme_color: StringQueryOperatorInput
    theme_color_in_head: BooleanQueryOperatorInput
    verbose: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsSchemasFilterInput {
    homepage: SitePluginPluginOptionsSchemasHomepageFilterInput
    legal_pages: SitePluginPluginOptionsSchemasLegal_pagesFilterInput
}

input SitePluginPluginOptionsSchemasHomepageFilterInput {
    Main: SitePluginPluginOptionsSchemasHomepageMainFilterInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageConfigFilterInput {
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsFilterInput {
    collection_image: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_imageFilterInput
    collection_name: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsCollection_nameFilterInput
    slug: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugFilterInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsSlugConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFilterInput {
    fields: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFieldsFilterInput
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainCollectionsFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainCollectionsConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainFilterInput {
    collections: SitePluginPluginOptionsSchemasHomepageMainCollectionsFilterInput
    hero_image: SitePluginPluginOptionsSchemasHomepageMainHero_imageFilterInput
    hero_title: SitePluginPluginOptionsSchemasHomepageMainHero_titleFilterInput
    offer_text: SitePluginPluginOptionsSchemasHomepageMainOffer_textFilterInput
    subheader: SitePluginPluginOptionsSchemasHomepageMainSubheaderFilterInput
}

input SitePluginPluginOptionsSchemasHomepageMainHero_imageConfigFilterInput {
    label: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainHero_imageFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainHero_imageConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainHero_titleConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainHero_titleFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainHero_titleConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainOffer_textConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainOffer_textFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainOffer_textConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainSubheaderConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasHomepageMainSubheaderFilterInput {
    config: SitePluginPluginOptionsSchemasHomepageMainSubheaderConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasLegal_pagesFilterInput {
    Main: SitePluginPluginOptionsSchemasLegal_pagesMainFilterInput
}

input SitePluginPluginOptionsSchemasLegal_pagesMainBodyConfigFilterInput {
    label: StringQueryOperatorInput
    multi: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasLegal_pagesMainBodyFilterInput {
    config: SitePluginPluginOptionsSchemasLegal_pagesMainBodyConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasLegal_pagesMainFilterInput {
    body: SitePluginPluginOptionsSchemasLegal_pagesMainBodyFilterInput
    title: SitePluginPluginOptionsSchemasLegal_pagesMainTitleFilterInput
}

input SitePluginPluginOptionsSchemasLegal_pagesMainTitleConfigFilterInput {
    label: StringQueryOperatorInput
    placeholder: StringQueryOperatorInput
    single: StringQueryOperatorInput
}

input SitePluginPluginOptionsSchemasLegal_pagesMainTitleFilterInput {
    config: SitePluginPluginOptionsSchemasLegal_pagesMainTitleConfigFilterInput
    type: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSearchIndexFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    index: SiteSearchIndex_IndexQueryOperatorInput
    internal: InternalFilterInput
    pages: StringQueryOperatorInput
    parent: NodeFilterInput
}

input SiteSearchIndexSortInput {
    fields: [SiteSearchIndexFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSearchIndex_IndexQueryOperatorInput {
    eq: SiteSearchIndex_Index
    in: [SiteSearchIndex_Index]
    ne: SiteSearchIndex_Index
    nin: [SiteSearchIndex_Index]
}

input SiteSiteMetadataFilterInput {
    author: StringQueryOperatorInput
    description: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

scalar PrismicImageThumbnailsType

"Serialized elasticlunr search index"
scalar SiteSearchIndex_Index